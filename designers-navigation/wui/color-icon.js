;(function(window) {

    var svgSprite = '<svg>' +
        ''+
        '<symbol id="icon-test" viewBox="0 0 1024 1024">'+
        ''+
        '<path d="M4.485663 2.418073h1019.492336v1019.494382H4.485663V2.418073z" fill="#009A61" ></path>'+
        ''+
        '<path d="M514.230296 121.166617c218.505549 0 390.999159 172.494633 390.999158 390.996089 0 218.506573-172.492586 390.999159-390.999158 390.999158-218.500433 0-390.995065-172.492586-390.995065-390.999158-0.001023-218.501456 172.493609-390.996089 390.995065-390.996089zM299.167149 494.916926c2.314719-49.450249 16.107863-111.550609 39.098483-173.655062-34.501792-14.950504-65.562205-31.039947-89.705068-48.289819-52.890604 58.643632-85.072561 135.697565-88.546685 221.944881H299.167149z m-139.15327 34.497699c3.475148 86.247316 35.656081 163.30125 88.546685 221.941811 24.14184-17.246803 55.203276-33.337269 89.705068-48.288796-24.14798-62.102407-37.940101-125.34273-39.098483-173.651992H160.013879zM415.332868 170.614819c-54.04694 13.793144-102.371552 41.396829-142.629441 78.193897 20.707624 14.950504 47.168276 29.898961 77.072353 42.553165 17.232476-43.694151 40.253796-86.247316 65.557088-120.747062zM272.703427 775.524882c40.257889 36.793998 88.582501 64.396659 142.629441 77.032444-26.460652-35.643802-48.324612-77.032444-64.400752-120.748085-29.898961 12.651135-56.363705 27.602661-78.228689 43.715641z m224.263693-410.55147c-39.098483-2.314719-83.952041-13.808494-127.646192-32.201399-20.703531 54.051033-33.338293 108.097974-35.657104 162.144913h163.302273V364.973412zM333.664847 529.414625c2.318812 51.748594 14.953573 106.955964 35.657105 162.15617 43.694151-18.407232 88.547709-29.897937 127.646192-32.19833V529.414625H333.664847z m163.302273-372.593973c-11.512195 0-22.992667 1.144056-35.659151 3.442402-31.024597 42.551118-59.804061 90.862427-81.633228 143.752008 37.940101 13.808494 79.351256 23.003923 117.292379 25.304315v-172.498725z m0 538.189475c-36.783765 2.300392-77.037561 10.356882-116.133997 24.14798 20.670785 51.750641 48.292889 102.356202 80.474846 144.905274 12.666484 2.300392 24.14798 3.439332 35.659151 3.439332V695.010127z m34.495652-365.69075c37.974893-2.300392 79.348186-11.495822 117.290333-25.304315-21.829168-52.889581-50.572816-101.20089-81.633228-143.752008-12.633738-2.299369-24.142863-3.442402-35.657105-3.442402v172.498725z m0 165.597549h163.300227c-2.281973-54.04694-14.948457-108.09388-35.657105-162.144913-43.694151 18.392906-88.546685 29.886681-127.643122 32.201399v129.943514z m0 34.497699v129.95784c39.096437 2.300392 83.948971 13.791098 127.643122 32.19833 20.707624-55.200206 33.374108-110.407576 35.657105-162.15617H531.462772z m0 338.088088c11.514241 0 23.023366-1.13894 35.657105-3.439332 32.18298-42.549072 59.804061-93.154633 80.511685-144.905274-39.096437-13.791098-79.351256-21.847587-116.167766-24.14798v172.492586zM755.725442 248.807692c-40.254819-36.796044-88.546685-64.400752-142.595672-78.193896 25.305339 34.499745 48.294936 77.05291 65.523319 120.747061 29.904077-12.653181 56.364729-27.602661 77.072353-42.553165zM613.12977 852.557326c54.047963-12.636808 102.340853-40.238446 142.595672-77.032444-21.864984-16.111956-48.291866-31.063483-78.192873-43.715641-16.107863 43.715641-37.972846 85.104283-64.402799 120.748085z m255.285221-357.6404c-3.440355-86.246293-35.657104-163.30125-88.544639-221.944881-24.14491 17.249873-55.205323 33.339316-89.701998 48.289819 22.984481 62.104453 36.815487 124.204813 39.09132 173.655062h139.155317z m-139.15634 34.497699c-1.155313 48.309262-14.948457 111.550609-39.09132 173.651992 34.496675 14.951527 65.557088 31.043017 89.701998 48.288796 52.888558-58.640562 85.104283-135.694495 88.544638-221.941811H729.258651z" fill="#FFFFFF" ></path>'+
        ''+
        '</symbol>'+
        ''+
        '<symbol id="icon-1" viewBox="0 0 1024 1024">'+
        ''+
        '<path d="M957.546 926.175c0 18.711-15.177 33.89-33.89 33.89h-838.892c-18.72 0-33.892-15.177-33.892-33.89v-838.895c0-18.72 15.177-33.892 33.892-33.892h838.892c18.711 0 33.89 15.177 33.89 33.892v838.895z" fill="#FF8800" ></path>'+
        ''+
        '<path d="M742.083 814.906c-18.817 0-36.492-7.325-49.782-20.627l-104.173-104.173-15.397 15.393-37.946-37.949 46.206-46.206-54.452-54.421-74.446 74.446c2.894 10.212 4.555 21.941 4.555 34.063 0 10.029-1.137 19.787-3.294 29.155-5.21 23.158-17.349 45.146-34.922 62.724-24.549 24.563-57.213 38.094-91.982 38.094-0.062 0-0.133 0-0.206 0-18.608 0-36.301-3.922-52.294-10.981l-35.511-15.289 61.686-61.686 0.234-17.090-15.226 0.206-62.585 62.582-15.694-36.214c-21.391-49.394-10.649-105.859 27.365-143.847 24.565-24.578 57.238-38.109 91.994-38.109 11.604 0 23.035 1.516 34.095 4.502l74.388-74.39-108.329-108.303-15.382 15.395-107.26-107.247 68.796-68.701 107.211 107.211-15.406 15.393 108.329 108.308 74.38-74.379c-2.924-10.271-4.605-22.063-4.605-34.246 0-9.988 1.132-19.715 3.269-29.060 5.206-23.182 17.351-45.197 34.957-62.791 24.54-24.565 57.21-38.103 91.98-38.103 0.061 0 0.127 0 0.195 0 18.682 0 36.439 3.945 52.49 11.044l35.403 15.375-62.597 62.576-0.212 15.238 17.083-0.235 61.677-61.671 15.643 36.348c21.275 49.303 10.512 105.699-27.423 143.654-24.594 24.577-57.269 38.102-92.019 38.102-11.55 0-22.931-1.5-33.953-4.468l-74.435 74.435 54.453 54.443 46.171-46.183 37.95 37.949-15.407 15.415 104.199 104.194c27.439 27.445 27.449 72.092 0.004 99.523-12.668 12.733-30.207 20.614-49.582 20.614-0.066 0-0.133 0-0.199 0zM595.288 652.156l119.579 119.579c6.922 6.967 16.51 11.283 27.105 11.283 0.037 0 0.079 0 0.117 0 10.273 0 19.945-4.003 27.214-11.283 6.944-6.918 11.241-16.491 11.241-27.068 0-0.048 0-0.098 0-0.15 0-0.029 0-0.070 0-0.116 0-10.583-4.299-20.165-11.249-27.085l-119.59-119.59-54.414 54.432zM294.488 768.198c9.488 3.366 20.431 5.312 31.828 5.312 0.048 0 0.102 0 0.15 0 26.235 0 50.887-10.211 69.42-28.746 27.139-27.133 35.987-66.396 23.097-102.483l-3.397-9.506 214.72-214.757 9.495 3.376c9.812 3.601 21.141 5.684 32.955 5.684 0.039 0 0.085 0 0.127 0 26.222 0 50.897-10.212 69.457-28.762 26.836-26.847 35.646-65.949 23.418-101.414l-37.37 37.37-62.826 0.853 0.85-60.975 38.352-38.345c-9.541-3.397-20.538-5.359-31.997-5.359-0.051 0-0.102 0-0.151 0-26.235 0-50.887 10.212-69.415 28.762-27.193 27.173-36.027 66.481-23.057 102.598l3.417 9.514-214.672 214.668-9.513-3.41c-9.829-3.623-21.178-5.717-33.014-5.717-0.054 0-0.109 0-0.161 0-26.227 0-50.883 10.213-69.431 28.771-26.912 26.893-35.717 66.047-23.394 101.57l38.364-38.364 60.953-0.813-0.853 62.818-37.36 37.354zM248.839 274.93l62.124 62.115 23.636-23.632-62.112-62.112-23.653 23.627zM765.189 767.617z" fill="#FFFFFF" ></path>'+
        ''+
        '</symbol>'+
        ''+
        '<symbol id="icon-zhanku123" viewBox="0 0 1024 1024">'+
        ''+
        '<path d="M311.806293 329.535147h325.925547v325.925546H311.806293z" fill="#F5CA1E" ></path>'+
        ''+
        '<path d="M588.880213 482.25792c-7.113387 3.9424-17.28 5.901653-25.770666 6.87104 13.463893-11.4432 26.533547-24.480427 31.8208-40.881493 7.169707-22.249813 7.386453-42.876587 0.679253-64.904534a5.22752 5.22752 0 0 0-4.19328-3.638613c-2.000213-0.34816-3.959467 0.525653-5.113173 2.157227-17.78688 25.332053-41.306453 41.490773-67.012267 46.266026 7.681707-15.45728 16.155307-32.904533 14.329173-51.14368a5.21728 5.21728 0 0 0-3.47648-4.40832 5.248 5.248 0 0 0-5.47328 1.271467c-27.252053 27.7504-49.00352 33.60768-75.27424 34.059947-29.006507 0.498347-56.707413 13.871787-75.987626 36.69504-19.124907 22.626987-27.589973 51.810987-23.22432 80.07168 7.010987 45.474133 40.946347 79.506773 86.45632 86.69696 5.742933 0.90624 11.436373 1.349973 17.03936 1.349973 37.377707 0 70.920533-19.766613 90.084693-54.109867 2.18624-3.90656 5.773653-7.739733 9.84064-10.530133 18.50368-12.660053 31.890773-29.047467 39.770453-48.7168 1.09056-2.720427 1.88928-6.068907 2.59072-9.024853l0.539307-2.228907a5.21728 5.21728 0 0 0-1.885867-5.423787 5.2736 5.2736 0 0 0-5.73952-0.428373zM360.925867 516.944213c4.391253 13.810347 31.389013 18.433707 31.389013 18.433707-22.534827 24.214187-31.389013-18.433707-31.389013-18.433707z m65.19296 18.433707s55.094613-6.36928 77.047466-25.350827c0 0-31.9744 72.905387-77.047466 25.350827z" fill="#040000" ></path>'+
        ''+
        '</symbol>'+
        ''+
        '</svg>'
    var script = function() {
        var scripts = document.getElementsByTagName('script')
        return scripts[scripts.length - 1]
    }()
    var shouldInjectCss = script.getAttribute("data-injectcss")

    /**
     * document ready
     */
    var ready = function(fn){
        if(document.addEventListener){
            document.addEventListener("DOMContentLoaded",function(){
                document.removeEventListener("DOMContentLoaded",arguments.callee,false)
                fn()
            },false)
        }else if(document.attachEvent){
            IEContentLoaded (window, fn)
        }

        function IEContentLoaded (w, fn) {
            var d = w.document, done = false,
            // only fire once
                init = function () {
                    if (!done) {
                        done = true
                        fn()
                    }
                }
            // polling for no errors
                ;(function () {
                try {
                    // throws errors until after ondocumentready
                    d.documentElement.doScroll('left')
                } catch (e) {
                    setTimeout(arguments.callee, 50)
                    return
                }
                // no errors, fire

                init()
            })()
            // trying to always fire before onload
            d.onreadystatechange = function() {
                if (d.readyState == 'complete') {
                    d.onreadystatechange = null
                    init()
                }
            }
        }
    }

    /**
     * Insert el before target
     *
     * @param {Element} el
     * @param {Element} target
     */

    var before = function (el, target) {
        target.parentNode.insertBefore(el, target)
    }

    /**
     * Prepend el to target
     *
     * @param {Element} el
     * @param {Element} target
     */

    var prepend = function (el, target) {
        if (target.firstChild) {
            before(el, target.firstChild)
        } else {
            target.appendChild(el)
        }
    }

    function appendSvg(){
        var div,svg

        div = document.createElement('div')
        div.innerHTML = svgSprite
        svg = div.getElementsByTagName('svg')[0]
        if (svg) {
            svg.setAttribute('aria-hidden', 'true')
            svg.style.position = 'absolute'
            svg.style.width = 0
            svg.style.height = 0
            svg.style.overflow = 'hidden'
            prepend(svg,document.body)
        }
    }

    if(shouldInjectCss && !window.__iconfont__svg__cssinject__){
        window.__iconfont__svg__cssinject__ = true
        try{
            document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
        }catch(e){
            console && console.log(e)
        }
    }

    ready(appendSvg)


})(window)